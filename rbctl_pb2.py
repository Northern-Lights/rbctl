# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rbctl.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rbctl.proto',
  package='rbctl',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0brbctl.proto\x12\x05rbctl\"~\n\x07\x43ommand\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.rbctl.Command.Type\"P\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04PLAY\x10\x01\x12\t\n\x05PAUSE\x10\x02\x12\x0e\n\nPLAY_PAUSE\x10\x03\x12\x08\n\x04NEXT\x10\x04\x12\x0c\n\x08PREVIOUS\x10\x05\"3\n\x0f\x43ontrolResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t2<\n\x05RBCtl\x12\x33\n\x07\x43ontrol\x12\x0e.rbctl.Command\x1a\x16.rbctl.ControlResponse\"\x00\x62\x06proto3')
)



_COMMAND_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='rbctl.Command.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLAY', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PAUSE', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLAY_PAUSE', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEXT', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PREVIOUS', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=68,
  serialized_end=148,
)
_sym_db.RegisterEnumDescriptor(_COMMAND_TYPE)


_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='rbctl.Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='rbctl.Command.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _COMMAND_TYPE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=148,
)


_CONTROLRESPONSE = _descriptor.Descriptor(
  name='ControlResponse',
  full_name='rbctl.ControlResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='rbctl.ControlResponse.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='rbctl.ControlResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=150,
  serialized_end=201,
)

_COMMAND.fields_by_name['type'].enum_type = _COMMAND_TYPE
_COMMAND_TYPE.containing_type = _COMMAND
DESCRIPTOR.message_types_by_name['Command'] = _COMMAND
DESCRIPTOR.message_types_by_name['ControlResponse'] = _CONTROLRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), dict(
  DESCRIPTOR = _COMMAND,
  __module__ = 'rbctl_pb2'
  # @@protoc_insertion_point(class_scope:rbctl.Command)
  ))
_sym_db.RegisterMessage(Command)

ControlResponse = _reflection.GeneratedProtocolMessageType('ControlResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONTROLRESPONSE,
  __module__ = 'rbctl_pb2'
  # @@protoc_insertion_point(class_scope:rbctl.ControlResponse)
  ))
_sym_db.RegisterMessage(ControlResponse)



_RBCTL = _descriptor.ServiceDescriptor(
  name='RBCtl',
  full_name='rbctl.RBCtl',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=203,
  serialized_end=263,
  methods=[
  _descriptor.MethodDescriptor(
    name='Control',
    full_name='rbctl.RBCtl.Control',
    index=0,
    containing_service=None,
    input_type=_COMMAND,
    output_type=_CONTROLRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_RBCTL)

DESCRIPTOR.services_by_name['RBCtl'] = _RBCTL

# @@protoc_insertion_point(module_scope)
